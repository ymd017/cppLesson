#include <iostream>

using namespace std;

/*
* 2進数を10進数に変換する
*/

/*============================================================
* メイン関数
* 引数　：なし
* 戻り値：なし
============================================================*/
int main() {

	// 変数宣言部
	int dec;			// 求める10進数
	int bi;				// 2進数の数値
	int biCpy;			// 2進数の数値
	int biCpy2;			// 2進数の数値
	int d = 0;			// 一番大きな位が2の何乗か
	int digits[15];		// 各位の数を格納する配列
	int dnum;			// 10の累乗
	int bnum;			// 2の累乗
	int i;				// ループインデックス
	int j;				// ループインデックス

	// 2進数の入力
	cout << "10進数に変換する2進数を入力してください。\n";
	cin >> bi;
	cout << "\n";

	// 2の何乗かと、その桁の数が何であるかが必要なので求める
	// 一番大きな位が2の何乗かを求める
	// 2進数をコピーする
	// 10で割れればdに1を加えるのを繰り返す
	// 10で割った商が０になったら、繰り返しを辞める
	biCpy = bi;
	while (biCpy / 10 != 0) {
		d++;
		biCpy /= 10;
	}

	// 各位の数を調べ、配列に格納する

	// ループインデックスが10の指数を指すfor文で最小位から最大位まで走査する、
	// 10のインデックス乗 + 1 で割った剰余を使い、対象位より大きい位をなくす
	// 対象位より小さい位をなくす
	// 10のインデックス乗で割り、今見ている桁だけが整数部に残るようにする
	// floorで整数部のみにする
	// 配列に格納する

	for (i = 0; i <= d; i++) {
		biCpy2 = bi;
		dnum = 1;
		for (j = 1; j <= i; j++) {
			dnum *= 10;
		}
		biCpy2 = biCpy2 % (dnum * 10);

		biCpy2 /= dnum;
		biCpy2 = floor(biCpy2);

		digits[i] = biCpy2;
	}

	// 10進数に変換する
	
	// for文で先頭から、位の最後dまで走査する
	// 桁の重みを作る、今の桁（インデックス）の数だけ2を掛ける
	// 配列要素に格納された各位の値に桁の重みを掛ける
	// decに足す
	// 結果を出力する
	// decを初期状態にする
	dec = 0;

	for (i = 0; i <= d; i++) {

		bnum = 1;
		for (j = 1; j <= i; j++) {
			bnum *= 2;
		}

		dec += digits[i] * bnum;
	}

	cout << dec << "\n";
}