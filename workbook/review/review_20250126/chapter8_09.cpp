/*
* 問題文：
* 文字列sに含まれる数字文字('0','1',…,'9')の個数をカウントして、
* 各数字文字の個数をc[0],c[1],…,c[9]に格納する関数couunt_digitsを作成せよ。
*/

#include <iostream>
using namespace std;

void couunt_digits(const char* s, int nums[]);

/*============================================================
* メイン関数
* 引数　：なし
* 戻り値：なし
============================================================*/
int main() {

	// 変数宣言部
	char s[40];					// 検索対象の文字列
	int nums[10] = { 0 };		// 数字文字を格納する配列。全要素を0で初期化
	int i;						// ループインデックス

	// 文字列の入力
	cout << "文字列を入力してください\n";
	cin >> s;

	// 文字列sに含まれる数字文字の個数をカウントして、各数字文字の個数を配列に格納する関数のしよう
	couunt_digits(s, nums);

	// 配列の出力
	for (i = 0; i < 10; i++) {
		cout << i << "が" << nums[i] << "個\n";
	}
}

void couunt_digits(const char* s, int nums[]) {

	// 変数宣言部
	int i;				// ループインデックス
	int num;

	// 文字列を1文字ずつ走査し、数字文字かどうか調べる
	// 文字を'0'を引くことでint型に変換して、0~9の間にあれば数字文字とする
	// インデックスとして使用し、配列の要素に1を加える
	for (i = 0; *(s + i) != '\0'; i++) {
		num = *(s + i) - '0';

		if (0 <= num && num <= 9) {
			nums[num]++;
		}
	}
}