/*
* 問題文：
* 要素数nの配列から要素a[idx]を削除する関数aryrmvを作成せよ。
* 削除はa[idx]より後方の全要素を1つ前方にずらすことによって行う。
* 末尾は移動させなくてよい。
*/

#include <iostream>
using namespace std;

void aryrmv(int a[], int n, int idx);

/*============================================================
* メイン関数
* 引数　：なし
* 戻り値：なし
============================================================*/
int main() {

	// 変数宣言部
	const int n = 10;
	int a[n];
	int idx;		// 削除する要素のインデックス
	int i;			// ループインデックス

	// 配列要素にインデックスの値を持たせる
	for (i = 0; i < n; i++) {
		a[i] = i;
	}

	// 元の配列の出力
	cout << "元の配列\n";
	for (i = 0; i < n; i++) {
		cout << "a[" << i << "] = " << a[i] << "\n";
	}
	cout << "\n";

	// 削除するインデックスの入力
	cout << "どのインデックスを削除しますか\n";
	cin >> idx;

	// 要素数nの配列から要素a[idx]を削除する関数の使用
	aryrmv(a, n, idx);

	// 関数使用後の配列の出力
	cout << "関数使用後の配列\n";
	for (i = 0; i < n; i++) {
		cout << "a[" << i << "] = " << a[i] << "\n";
	}
}

void aryrmv(int a[], int n, int idx) {

	// 変数宣言部
	int i;			// ループインデックス

	// idx以降のインデックスの値を1つ後ろのインデックスの値にする。
	// ただし、1つ後ろの値が存在している場合に限る
	// for文でidx以降の値を走査する
	for (i = idx; i < n; i++) {
		if ((i + 1) < n) {
			a[i] = a[i + 1];
		}
	}
}