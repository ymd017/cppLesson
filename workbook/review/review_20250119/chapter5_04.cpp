/*
* 問題文：
* 要素数6でint型要素の配列に、1~10の乱数を持たせる。
* 一度選んだ数字は選ばないようにする
*/

#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

/*============================================================
* メイン関数
* 引数　：なし
* 戻り値：なし
============================================================*/
int main() {

	// 変数宣言部
	const int n = 6;
	int a[n];
	int i;
	int j;
	int flg;

	// シード値
	srand(time(NULL));


	// for文でiを使って先頭から最後まで走査し、配列要素に乱数を持たせる
	// for文でjを使って先頭からiの1つ前まで走査し、iで選んだ数が既に選ばれていないか調べる
	// 選ばれていた場合は再び乱数を選びなおす
	for (i = 0; i < n; i++) {

		do {
			flg = 0;

			a[i] = rand() % 10 + 1;

			for (j = 0; j < i; j++) {
				// 選んだ数が既に選ばれていればやり直す
				if (a[i] == a[j]) {
					flg = 1;
					break;
				}
			}
		} while (flg == 1);		// 選んだ数が既に選ばれていればやり直す
	}
	
	// 配列を出力する。
	// for文でiを使って先頭から最後まで走査する。
	for (i = 0; i < n; i++) {
		cout << "a[" << i << "] = " << a[i] << "\n";
	}
}
