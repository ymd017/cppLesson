
#include <iostream>
#include <iomanip>
using namespace std;

/*
* 問題文：
* 要素数nの配列から要素a[idx]を削除する関数aryrmvを作成せよ。
* 削除はa[idx]より後方の全要素を1つ前方にずらすことによって行う。
* 末尾は移動させなくてよい。
*/

void aryrmv(int a[], int n, int idx);

/*============================================================
* メイン関数
* 引数　：なし
* 戻り値：なし
============================================================*/
int main() {

	int idx;		// 削除する要素のインデックス

	// 配列を初期化する
	int a[] = { 1,2,3,4,5,6,7,8,9,10 };

	// 配列を出力する
	for (int i = 0; i < 10; i++) {
		cout << "a[" << i << "] = " << a[i] << "\n";
	}
	cout << "\n";

	// 削除する要素のインデックスを入力する
	cout << "削除する要素のインデックスを入力してください。\n";
	cin >> idx;

	// 要素数nの配列から要素a[idx]を削除する関数の使用
	aryrmv(a, 10, idx);

	// 要素削除後の配列を出力する。
	for (int i = 0; i < 10; i++) {
		cout << "a[" << i << "] = " << a[i] << "\n";
	}
	cout << "\n";

}

/*============================================================
* 要素数nの配列から要素a[idx]を削除する関数
* 引数　：int a[]		要素の合計を求める対象の配列
* 引数　：int n			配列の要素数
* 引数　：int idx		削除する要素のインデックス
* 戻り値：なし
============================================================*/
void aryrmv(int a[], int n, int idx) {

	// a[idx]を削除し、a[idx]より後方の全要素の値を1つ前方にずらす。
	
	// a[idx]からa[n-2]までの要素の値を、一つ次のインデックスの値にする.
	for (int i = idx; i <= n - 2; i++) {
		a[i] = a[i + 1];
	}
}
