#include <iostream>
#include <iomanip>
using namespace std;

/*
* 問題文：
* 要素数がnである配列bの全要素を配列aにコピーする関数を作成せよ。
*/

void ary_cpy(int* a, const int* b, int n);

/*============================================================
* メイン関数
* 引数　：なし
* 戻り値：なし
============================================================*/
int main() {

	const int n = 7;				// 配列の要素数の初期化
	int b[] = { 1,2,3,4,5,6,7 };	// 配列bの初期化
	int a[n];						// 配列aの宣言

	// 配列bの出力
	cout << "配列b : ";
	for (int i = 0; i < n; i++) {
		cout << setw(2) << b[i];
	}
	cout << "\n";

	// 要素数がnである配列bの全要素を配列aにコピーする関数の使用
	ary_cpy(a, b, n);

	// 配列aの出力
	cout << "配列bを配列aにコピーしました。\n";

	cout << "配列a : ";
	for (int i = 0; i < n; i++) {
		cout << setw(2) << a[i];
	}
	cout << "\n";
}

/*============================================================
* 要素数がnである配列bの全要素を配列aにコピーする関数
* 引数　：int* a			コピー先の配列
* 引数　：const int* b		コピー元の配列
* 引数　：int n				配列の要素数
* 戻り値：なし
============================================================*/
void ary_cpy(int* a, const int* b, int n) {

	// for文で最初から最後まで配列aとbを走査する
	// 配列bの要素の値を同じインデックスの配列aの要素に代入していく。
	for (int i = 0; i < n; i++) {
		*(a + i) = *(b + i);
	}

}