#include <iostream>
using namespace std;

/*
* 問題文：
* ポインタa, b, cが指す変数を昇順(*a <= *b <= *c)となるように、
* ソートする関数sortを作成せよ。
* 
* 2つの変数の値を入れ替えるswap関数をsort関数内部で使用すること。
*/

void swap(int* a, int* b);
void sort(int* a, int* b, int* c);

/*============================================================
* メイン関数
* 引数　：なし
* 戻り値：なし
============================================================*/
int main() {

	// ソート対象の変数を宣言する
	int a, b, c;

	// ソート対象の変数を入力する
	cout << "整数を入力してください。\n";
	cout << "a : ";  cin >> a;
	cout << "b : ";  cin >> b;
	cout << "c : ";  cin >> c;

	// ソートする
	sort(&a, &b, &c);


	// ソート後の値を出力する
	cout << "ソートしました。\n";
	cout << "a : " << a << "\n";
	cout << "b : " << b << "\n";
	cout << "c : " << c << "\n";
}

/*============================================================
* a <= bになるように、値を入れ替える関数
* 引数　：int* a		値を入れ替える対象の変数のポインタ、入れ替え後は小さい値が格納される
* 引数　：int* b		値を入れ替える対象の変数のポインタ、入れ替え後は大きい値が格納される
* 戻り値：なし
============================================================*/
void swap(int* a, int* b) {

	// a > bなら変数の値を入れ替える
	if (a > b) {
		int temp = *a;
		*a = *b;
		*b = temp;
	}
}

/*============================================================
* ポインタa, b, cが指す変数を昇順(*a <= *b <= *c)となるように、ソートする関数
* 引数　：int* a		値を入れ替える対象の変数のポインタ、入れ替え後は最も小さい値が格納される
* 引数　：int* b		値を入れ替える対象の変数のポインタ、入れ替え後は2番目に大きい値が格納される
* 引数　：int* c		値を入れ替える対象の変数のポインタ、入れ替え後は最も大きい値が格納される
* 戻り値：なし
============================================================*/
void sort(int* a, int* b, int* c) {

	// aが最も小さくなるように(a <= b && a <= c)に値を入れ替える。
	if (*a > *b) {
		swap(*a, *b);
	}
	if (*a > *c) {
		swap(*a, *c);
	}

	// b <= cとなるように値を入れ替える
	if (b > c) {
		swap(b, c);
	}
}
