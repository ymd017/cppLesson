#include <iostream>
#include <iomanip>
using namespace std;

/*
* 問題文：
* 要素数がnである配列bの正の要素のみを配列aに先頭から順にコピーする関数を作成せよ。
* コピーした要素数を返却すること。
*/

int ary_plus_cpy(int* a, const int* b, int n);

/*============================================================
* メイン関数
* 引数　：なし
* 戻り値：なし
============================================================*/
int main() {

	const int n = 7;				// 配列の要素数の初期化
	int b[] = { 1,-2,3,4,-5,-6,7 };	// 配列bの初期化
	int a[n];						// 配列aの宣言
	int count;						// 配列aにコピーした要素数

	// 配列bの出力
	cout << "配列b : ";
	for (int i = 0; i < n; i++) {
		cout << setw(3) << b[i];
	}
	cout << "\n";

	// 要素数がnである配列bの全要素を配列aにコピーする関数の使用
	count = ary_plus_cpy(a, b, n);

	// 配列aの出力
	cout << "配列bの正の要素を配列aにコピーしました。\n";

	cout << "配列a : ";
	for (int i = 0; i < count; i++) {
		cout << setw(3) << a[i];
	}
	cout << "\n";
}

/*============================================================
* 要素数がnである配列bの全要素を配列aにコピーする関数
* 引数　：int* a			コピー先の配列
* 引数　：const int* b		コピー元の配列
* 引数　：int n				配列の要素数
* 戻り値：int				コピーした要素数
============================================================*/
int ary_plus_cpy(int* a, const int* b, int n) {

	int count = 0;		// コピーした要素数

	// for文で最初から最後まで配列aとbを走査する
	// bの要素が正の要素か判定する。
	// 正の要素ならば、配列bの要素の値を同じインデックスの配列aの要素に代入していく。
	for (int i = 0; i < n; i++) {

		if (*(b + i) > 0) {
			*a++ = *(b + i);
			count++;
		}
	}

	return count;
}

