#include <iostream>
#include <iomanip>
using namespace std;

/*
* 問題文：
* n行5列のint型2次元配列aの各行の最大値を、
* 要素数nのint型1次元配列mに格納する関数maxlineを作成せよ。
*/

void maxline(int a[][5], int m[], int n);

/*============================================================
* メイン関数
* 引数　：なし
* 戻り値：なし
============================================================*/
int main() {

	// 行数の初期化、配列mの宣言
	const int n = 4;
	int m[n];

	// 行列の宣言
	int a[n][5];

	// 行列の各成分へ値を代入
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < 5; j++) {
			a[i][j] = j + i * 5;

			if (j % 3 == 0) {
				a[i][j] = i * 3 + j * 2;
			}
		}
	}

	// 行列を出力する
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < 5; j++) {
			cout << setw(3) << a[i][j];
		}
		cout << "\n";
	}
	cout << "\n";

	// 各行の最大値を、要素数nのint型1次元配列mに格納する関数の使用
	maxline(a, m, n);

	// 各行の最大値が格納されている配列mを出力する
	for (int i = 0; i < n; i++) {
		cout << "m[" << i << "] = " << m[i] << "\n";
	}
}

/*============================================================
* n行5列のint型2次元配列aの各行の最大値を、要素数nのint型1次元配列mに格納する関数
* 引数　：int a[][5]		各行の最大値を求める元となる行列
* 引数　：int m[]			行列の各行の最大値を格納する配列
* 引数　：int n				配列の要素数、行列の行数
* 戻り値：なし
============================================================*/
void maxline(int a[][5], int m[], int n) {

	// 最大値を格納する変数の宣言
	int max;

	// for文で各行を走査して、
	// さらに内側のfor文で列を走査して、最大値を求める
	// 最大値を配列mに格納する
	for (int i = 0; i < n; i++) {

		// 各行で最大値をリセットする
		max = -10000;

		for (int j = 0; j < 5; j++) {
			if (max < a[i][j]) {
				max = a[i][j];
			}
		}

		m[i] = max;
	}
}
