#include <iostream>
using namespace std;

/*
* 問題文：
* 要素数nの配列a内を用意する。
* keyと等しい全要素の添字を配列idxに格納する関数search_idxを作成せよ。
* 返却するのはkeyと等しい要素の個数とする
*/

int search_idx(int* a, int* idx, int n, int key);

/*============================================================
* メイン関数
* 引数　：なし
* 戻り値：なし
============================================================*/
int main() {

	const int n = 8;					// 要素数を初期化する
	int a[] = { 0,2,7,0,3,6,0,5 };		// 配列aを初期化する
	int key;							// 検索する値
	int idx[n];							// keyと等しい全要素の添字を格納する配列
	int count;							// keyと等しい要素の個数


	// for文で先頭から最後まで走査して、配列aを表示する
	cout << "配列a\n";
	for (int i = 0; i < n; i++) {
		cout << "a[" << i << "] = " << a[i] << "\n";
	}
	cout << "\n";

	// 検索する文字の入力
	cout << "検索する整数値を入力してください。\n";
	cin >> key;

	// keyと等しい全要素の添字を配列idxに格納する関数を使用する
	count = search_idx(a, idx, n, key);

	// for文で先頭から最後まで走査して、配列idxを表示する。
	cout << "配列aの" << key << "の添字は次の通りです。\n";
	for (int i = 0; i < count; i++) {
		cout << idx[i] << " ";
	}
	cout << "\n";
	
}

/*============================================================
* keyと等しい全要素の添字を配列idxに格納する関数
* 引数　：int* a			検索ベースとなる配列
* 引数　：int* idx			keyと等しい要素の添字を格納する配列
* 引数　：int n				配列の要素数
* 戻り値：key				検索する値
============================================================*/
int search_idx(int* a, int* idx, int n, int key) {

	int count = 0;		// keyと等しい要素の個数

	// for文で先頭から最後まで走査する
	// 要素がkeyと等しいかどうか判定する
	// keyと等しい場合は添字を配列idxの要素に代入する。カウントを増やす。
	for (int i = 0; i < n; i++) {
		if (*(a + i) == key) {
			*idx++ = i;
			count++;
		}
	}

	return count;
}

