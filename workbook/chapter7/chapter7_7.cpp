#include <iostream>
using namespace std;

/*
* 問題文：
* int*型のポインタpを、int[5]型の配列aの先頭要素を指すように初期化したうえで、
* aとpに対して間接演算子*と添字演算子[]を適用した値を表示するプログラムを作成せよ。
* 
* swap関数を使うように7-6を改変せよ。
*/

void swap(int* a, int* b);
void reverse(int a[], int n);

/*============================================================
* メイン関数
* 引数　：なし
* 戻り値：なし
============================================================*/
int main() {

	// 配列の要素数変数の初期化
	const int n = 5;

	// int型配列の初期化
	int a[] = { 1,2,3,4,5 };

	// forで先頭から最後まで走査して、現在の配列の要素を出力する
	for (int i = 0; i < n; i++) {
		cout << "a[" << i << "] = " << a[i] << "\n";
	}
	cout << "\n";

	// int型配列の要素の並びを反転する関数の使用
	reverse(a, n);

	// forで先頭から最後まで走査して、結果を出力する
	for (int i = 0; i < n; i++) {
		cout << "a[" << i << "] = " << a[i] << "\n";
	}
}

/*============================================================
* 値を入れ替える関数
* 引数　：int* a		値を入れ替える対象の変数のポインタ
* 引数　：int* b		値を入れ替える対象の変数のポインタ
* 戻り値：なし
============================================================*/
void swap(int* a, int* b) {

	// 変数の値を入れ替える
	int temp = *a;
	*a = *b;
	*b = temp;
}

/*============================================================
* int型配列の要素の並びを反転する関数
* 引数　：int a[]		対象のint型配列
* 戻り値：なし
============================================================*/
void reverse(int a[], int n) {

	// 先端と末端から順に値を入れ替えるペアとする
	// ペア同士で値を入れ替える
	// 配列の真ん中まで終わったら、処理を辞める
	for (int i = 0; i <= (n / 2); i++) {
		swap(&a[i], &a[n - 1 - i]);
	}
}