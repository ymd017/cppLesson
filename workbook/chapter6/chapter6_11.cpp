#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

/*
* 問題文：
* 3つの3桁の整数値を加減算する暗算トレーニングを作成せよ
*/

void calculate();

/*============================================================
* メイン関数
* 引数　：なし
* 戻り値：なし
============================================================*/
int main() {

	// 3つの3桁の整数値を加減算する暗算トレーニング関数の使用
	calculate();

}

/*============================================================
* 続けるかどうかを確認する関数
* 引数　：なし
* 戻り値：bool		続けるときはtrue,続けないときはfalse
============================================================*/
bool confirm_retry() {

	// 続けるかどうかの答えを格納する変数の宣言
	int retry;

	// 続けるかどうかを入力する
	// 1で続ける、0で辞める、どちらでもないなら入力させ直す
	do {
		cout << "続けますか？（yes : 1, no : 0) ： ";
		cin >> retry;
	} while (retry != 0 && retry != 1);

	// 結果を出力する
	if (retry == 1) {
		return true;
	}
	else {				// retry == 0
		return false;
	}
}

/*============================================================
* 3つの3桁の整数値を加減算する暗算トレーニング関数
* 引数　：なし
* 戻り値：なし
============================================================*/
void calculate() {

	int ans;			// 答え
	int res;			// 回答
	int n1, n2, n3;		// 乱数を格納する変数

	// "スタートの表示"
	cout << "暗算トレーニングスタート！！\n";

	do {
		// 3桁の整数値の乱数を選ぶ
		srand(time(NULL));

		n1 = rand() % 900 + 100;
		n2 = rand() % 900 + 100;
		n3 = rand() % 900 + 100;

		// 演算子の組み合わせを決める
		
		int sign_pattern = rand() % 4;

		// 問題文を表示する
		// 回答を入力する
		// 間違っていれば何度でも繰り返す
		do {
			switch (sign_pattern) {
			case 0:
				cout << n1 << " + " << n2 << " + " << n3 << " = ";
				ans = n1 + n2 + n3;
				break;
			case 1:
				cout << n1 << " + " << n2 << " - " << n3 << " = ";
				ans = n1 + n2 - n3;
				break;
			case 2:
				cout << n1 << " - " << n2 << " + " << n3 << " = ";
				ans = n1 - n2 + n3;
				break;
			case 3:
				cout << n1 << " - " << n2 << " - " << n3 << " = ";
				ans = n1 - n2 - n3;
				break;
			}
			cin >> res;
		} while (res != ans);

		// 正解と表示する
		cout << "正解です！\n";

	} while (confirm_retry());		//  続けるかどうかを確認する関数
		
	// 辞めることを表示する
	cout << "終了しました。\n";
	


}