#include <iostream>
using namespace std;

/*
* 問題文：
* 文字列sに含まれる最も先頭に位置する文字cのへのポインタを返す関数strchr_ptrを作成せよ。
* 文字cが文字列sに含まれない場合はNULLを返却すること。
*/

const char* strchr_ptr(const char* s, char c);

/*============================================================
* メイン関数
* 引数　：なし
* 戻り値：なし
============================================================*/
int main() {

	char c;		// 検索する文字
	const char* ptr;	// 検索文字が初めて現れた要素のポインタ

	// 文字列sの初期化
	char s[] = "hello";

	// 文字列の出力
	cout << "文字列は " << s << " です。\n";

	// 検索する文字の入力
	cout << "検索する文字を入力してください。\n";
	cin >> c;

	// 文字列sに含まれる最も先頭に位置する文字cの添字を返す関数の使用
	// ptrに結果を格納する
	ptr = strchr_ptr(s, c);
	
	// 結果の出力
	if (ptr != NULL) {
		cout << "strchr_ptr(s, c)を評価して返却されたポインタの値は " << *ptr << " です。";
	}
	else {
		cout << "文字列に文字" << c << "は含まれません。\n";
	}
}

/*============================================================
* 文字列sに含まれる最も先頭に位置する文字cのへのポインタを返す関数
* 引数　：const char* s		s1の末尾に連結する文字列
* 引数　：char c		検索する文字
* 戻り値：const char*			文字列sに含まれる最も先頭に位置する文字cのへのポインタ
============================================================*/
const char* strchr_ptr(const char* s, char c) {

	const char* ptr = s;

	// while文で先頭からNULL文字の1つ前まで走査する
	// 文字cが初めて現れたところのポインタを返却する
	while (*ptr != '\0') {

		if (*ptr == c) {
			return ptr;
		}

		// 文字を1つ次に進める
		ptr++;
	}

	// 文字cが現れなかった場合はNULLを返却する
	return NULL;
}
