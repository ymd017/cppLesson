#include <iostream>
using namespace std;

/*
* 問題文：
* 文字列sに含まれる数字文字('0','1',…,'9')の個数をカウントして、
* 各数字文字の個数をc[0],c[1],…,c[9]に格納する関数couunt_digitsを作成せよ。
*/

void couunt_digits(const char[], int count[]);

/*============================================================
* メイン関数
* 引数　：なし
* 戻り値：なし
============================================================*/
int main() {

	char s[] = "W140S500L88";	// 数字文字を数える対象の文字列
	int count[10] = { 0 };		// 数字文字の個数を格納する配列

	// 文字列sに含まれる数字文字の個数をカウントして、各数字文字の個数を配列に格納する関数の使用
	couunt_digits(s, count);

	// for文で先頭から最後まで走査して、数字文字の個数を出力する
	for (int i = 0; i < 10; i++) {
		cout << i << " : " << count[i] << "個\n";
	}
}

/*============================================================
* 文字列sに含まれる数字文字の個数をカウントして、各数字文字の個数を配列に格納する関数
* 引数　：const char s[]		// 数字文字を数える対象の文字列
* 引数　：int count[]		// 数字文字の個数を格納する配列
* 戻り値：なし
============================================================*/
void couunt_digits(const char s[], int count[]) {

	// for文で先頭から最後まで走査する
	// 数字文字であれば配列の各要素を1増やす
	for (int i = 0; s[i] != '\0'; i++) {
		if (s[i] - '0' >= 0 && s[i] - '0' <= 9) {	// 数字文字から'0'を減算すると数値になることを利用する
			count[s[i] - '0']++;
		}
	}

}